@page "/fetchdata"
@using BlazorSamples.Shared
@using static BlazorSamples.Client.Shared.GraphCanvas
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <GraphCanvas Title="temparatures" Data="lineGraph" />

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    private LineGraph lineGraph;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");

        lineGraph = new LineGraph()
        {
            Data = new LineGraphData()
            {
                Labels = forecasts.Select(f => f.Date.ToShortDateString()),
                Datasets = new List<LineData>() {
                    new LineData()
                    {
                        Label = "tempC",
                        Data = forecasts.Select(f => f.TemperatureC),
                        BorderColor = "coral",
                    },
                    new LineData()
                    {
                        Label = "tempF",
                        Data = forecasts.Select(f => f.TemperatureF),
                        BorderColor = "lightgreen",
                    }
                }
            }
        };
    }
}
